openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/controllers/:
    get:
      operationId: controllers_list
      parameters:
      - in: query
        name: projectID
        schema:
          type: integer
        required: true
      tags:
      - controllers
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Controller'
          description: ''
    post:
      operationId: controllers_create
      tags:
      - controllers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Controller'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Controller'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Controller'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Controller'
          description: ''
  /api/controllers/{id}/:
    get:
      operationId: controllers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this controller.
        required: true
      tags:
      - controllers
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Controller'
          description: ''
    put:
      operationId: controllers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this controller.
        required: true
      tags:
      - controllers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Controller'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Controller'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Controller'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Controller'
          description: ''
    patch:
      operationId: controllers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this controller.
        required: true
      tags:
      - controllers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedController'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedController'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedController'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Controller'
          description: ''
    delete:
      operationId: controllers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this controller.
        required: true
      tags:
      - controllers
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/edges/:
    get:
      operationId: edges_list
      parameters:
      - in: query
        name: projectID
        schema:
          type: integer
        required: true
      tags:
      - edges
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Edge'
          description: ''
    post:
      operationId: edges_create
      description: |-
        Custom CREATE function.
        Validates URL Params and Serializes data.
      tags:
      - edges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEdge'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateEdge'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateEdge'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          description: No response body
  /api/edges/{id}/:
    get:
      operationId: edges_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this edge.
        required: true
      tags:
      - edges
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edge'
          description: ''
    put:
      operationId: edges_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this edge.
        required: true
      tags:
      - edges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edge'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Edge'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Edge'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edge'
          description: ''
    patch:
      operationId: edges_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this edge.
        required: true
      tags:
      - edges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEdge'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEdge'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEdge'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edge'
          description: ''
    delete:
      operationId: edges_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this edge.
        required: true
      tags:
      - edges
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/nodes/:
    get:
      operationId: nodes_list
      parameters:
      - in: query
        name: projectID
        schema:
          type: integer
        required: true
      tags:
      - nodes
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Node'
          description: ''
    post:
      operationId: nodes_create
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateNode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateNode'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          description: No response body
  /api/nodes/{id}/:
    get:
      operationId: nodes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this node.
        required: true
      tags:
      - nodes
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
          description: ''
    put:
      operationId: nodes_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this node.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Node'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Node'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
          description: ''
    patch:
      operationId: nodes_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this node.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNode'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
          description: ''
    delete:
      operationId: nodes_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this node.
        required: true
      tags:
      - nodes
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/projects/:
    get:
      operationId: projects_list
      tags:
      - projects
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
          description: ''
    post:
      operationId: projects_create
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/projects/{id}/:
    get:
      operationId: projects_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    put:
      operationId: projects_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    patch:
      operationId: projects_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProject'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: projects_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/properties/:
    get:
      operationId: properties_list
      tags:
      - properties
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PropertyInfo'
          description: ''
    post:
      operationId: properties_create
      tags:
      - properties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PropertyInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PropertyInfo'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyInfo'
          description: ''
  /api/properties/{id}/:
    get:
      operationId: properties_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this property info.
        required: true
      tags:
      - properties
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyInfo'
          description: ''
    put:
      operationId: properties_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this property info.
        required: true
      tags:
      - properties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PropertyInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PropertyInfo'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyInfo'
          description: ''
    patch:
      operationId: properties_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this property info.
        required: true
      tags:
      - properties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPropertyInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPropertyInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPropertyInfo'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyInfo'
          description: ''
    delete:
      operationId: properties_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this property info.
        required: true
      tags:
      - properties
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/sets/:
    get:
      operationId: sets_list
      parameters:
      - in: query
        name: projectID
        schema:
          type: integer
        required: true
      tags:
      - sets
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PropertySet'
          description: ''
    post:
      operationId: sets_create
      tags:
      - sets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertySet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PropertySet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PropertySet'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertySet'
          description: ''
  /api/sets/{id}/:
    get:
      operationId: sets_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this property set.
        required: true
      tags:
      - sets
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertySet'
          description: ''
    put:
      operationId: sets_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this property set.
        required: true
      tags:
      - sets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertySet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PropertySet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PropertySet'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertySet'
          description: ''
    patch:
      operationId: sets_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this property set.
        required: true
      tags:
      - sets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPropertySet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPropertySet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPropertySet'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertySet'
          description: ''
    delete:
      operationId: sets_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this property set.
        required: true
      tags:
      - sets
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/weather_data/:
    get:
      operationId: weather_data_list
      parameters:
      - in: query
        name: controllerID
        schema:
          type: integer
        required: true
      tags:
      - weather_data
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WeatherData'
          description: ''
    post:
      operationId: weather_data_create
      tags:
      - weather_data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeatherData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WeatherData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WeatherData'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeatherData'
          description: ''
  /api/weather_data/{id}/:
    get:
      operationId: weather_data_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this weather data.
        required: true
      tags:
      - weather_data
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeatherData'
          description: ''
    put:
      operationId: weather_data_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this weather data.
        required: true
      tags:
      - weather_data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeatherData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WeatherData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WeatherData'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeatherData'
          description: ''
    patch:
      operationId: weather_data_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this weather data.
        required: true
      tags:
      - weather_data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWeatherData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWeatherData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWeatherData'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeatherData'
          description: ''
    delete:
      operationId: weather_data_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this weather data.
        required: true
      tags:
      - weather_data
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    CalculationModeEnum:
      enum:
      - Outputs
      - Advanced
      - Power Based
      - Peak Sunlight Hours
      - Electrical
      - Physical
      - Power Output
      - Rotor Based
      - Cut In/Out Speeds
      - Simple Home
      - Complex Home
      type: string
      description: |-
        * `Outputs` - Outputs
        * `Advanced` - Advanced
        * `Power Based` - Solarpowerbased
        * `Peak Sunlight Hours` - Solarpeaksunlighthours
        * `Electrical` - Solarelectrical
        * `Physical` - Solarphysical
        * `Power Output` - Windpoweroutput
        * `Rotor Based` - Windrotorbased
        * `Cut In/Out Speeds` - Windcutincutoutspeeds
        * `Simple Home` - Simplehome
        * `Complex Home` - Complexhome
    Controller:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        total_energy:
          type: number
          format: double
          nullable: true
        total_emissions:
          type: number
          format: double
          nullable: true
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        grid_emission_factor:
          type: number
          format: double
        weather:
          type: integer
      required:
      - id
      - weather
    CreateEdge:
      type: object
      properties:
        project:
          type: integer
        source:
          type: integer
        target:
          type: integer
      required:
      - project
      - source
      - target
    CreateNode:
      type: object
      properties:
        project:
          type: integer
        type:
          type: string
      required:
      - project
      - type
    DisplayTypeEnum:
      enum:
      - numeric
      - dropdown
      - checkbox
      - segmented
      - text
      type: string
      description: |-
        * `numeric` - Numeric
        * `dropdown` - Dropdown
        * `checkbox` - Checkbox
        * `segmented` - Segmented
        * `text` - Text
    Edge:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        source:
          type: string
          readOnly: true
        target:
          type: string
          readOnly: true
        project:
          type: integer
      required:
      - id
      - project
      - source
      - target
    Node:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        position:
          $ref: '#/components/schemas/NodePosition'
        data:
          type: object
          additionalProperties: {}
          readOnly: true
        type:
          $ref: '#/components/schemas/TypeEnum'
        calculation_mode:
          $ref: '#/components/schemas/CalculationModeEnum'
        project:
          type: integer
      required:
      - data
      - id
      - position
      - project
    NodePosition:
      type: object
      properties:
        x:
          type: number
          format: double
        y:
          type: number
          format: double
      required:
      - x
      - y
    PatchedController:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        total_energy:
          type: number
          format: double
          nullable: true
        total_emissions:
          type: number
          format: double
          nullable: true
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        grid_emission_factor:
          type: number
          format: double
        weather:
          type: integer
    PatchedEdge:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        source:
          type: string
          readOnly: true
        target:
          type: string
          readOnly: true
        project:
          type: integer
    PatchedNode:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        position:
          $ref: '#/components/schemas/NodePosition'
        data:
          type: object
          additionalProperties: {}
          readOnly: true
        type:
          $ref: '#/components/schemas/TypeEnum'
        calculation_mode:
          $ref: '#/components/schemas/CalculationModeEnum'
        project:
          type: integer
    PatchedProject:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 32
        date:
          type: string
          format: date-time
          nullable: true
        controller:
          type: integer
    PatchedPropertyInfo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        display_type:
          $ref: '#/components/schemas/DisplayTypeEnum'
        value:
          nullable: true
        key:
          type: string
          maxLength: 64
        display_name:
          type: string
          maxLength: 64
        disabled:
          type: boolean
        defined:
          type: boolean
        hidden:
          type: boolean
        set:
          type: integer
    PatchedPropertySet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/PropertyInfo'
          readOnly: true
        name:
          type: string
          maxLength: 64
        node:
          type: integer
    PatchedWeatherData:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        timestamp:
          type: string
          format: date-time
          readOnly: true
        timeframe:
          $ref: '#/components/schemas/TimeframeEnum'
        sky:
          $ref: '#/components/schemas/SkyEnum'
        location:
          type: string
          maxLength: 255
        irradiance:
          type: number
          format: double
          nullable: true
        temperature:
          type: number
          format: double
          nullable: true
        wind_speed:
          type: number
          format: double
          nullable: true
        humidity:
          type: number
          format: double
          nullable: true
    Project:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 32
        date:
          type: string
          format: date-time
          nullable: true
        controller:
          type: integer
      required:
      - controller
      - id
    PropertyInfo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        display_type:
          $ref: '#/components/schemas/DisplayTypeEnum'
        value:
          nullable: true
        key:
          type: string
          maxLength: 64
        display_name:
          type: string
          maxLength: 64
        disabled:
          type: boolean
        defined:
          type: boolean
        hidden:
          type: boolean
        set:
          type: integer
      required:
      - id
      - key
      - set
    PropertySet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/PropertyInfo'
          readOnly: true
        name:
          type: string
          maxLength: 64
        node:
          type: integer
      required:
      - id
      - node
      - properties
    SkyEnum:
      enum:
      - cloudy_sky
      - clear_sky
      type: string
      description: |-
        * `cloudy_sky` - Cloudy
        * `clear_sky` - Clear
    TimeframeEnum:
      enum:
      - current
      - minutely
      - hourly
      - daily
      type: string
      description: |-
        * `current` - Current
        * `minutely` - Minutely
        * `hourly` - Hourly
        * `daily` - Daily
    TypeEnum:
      enum:
      - solar_panel
      - wind_turbine
      - factory_model
      - home
      - general_consumer
      - lithium_ion
      type: string
      description: |-
        * `solar_panel` - Solarpanel
        * `wind_turbine` - Windturbine
        * `factory_model` - Factorymodel
        * `home` - Home
        * `general_consumer` - Generalconsumer
        * `lithium_ion` - Lithiumion
    WeatherData:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        timestamp:
          type: string
          format: date-time
          readOnly: true
        timeframe:
          $ref: '#/components/schemas/TimeframeEnum'
        sky:
          $ref: '#/components/schemas/SkyEnum'
        location:
          type: string
          maxLength: 255
        irradiance:
          type: number
          format: double
          nullable: true
        temperature:
          type: number
          format: double
          nullable: true
        wind_speed:
          type: number
          format: double
          nullable: true
        humidity:
          type: number
          format: double
          nullable: true
      required:
      - id
      - location
      - timestamp
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
